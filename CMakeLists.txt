cmake_minimum_required(VERSION 3.25)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})

if (LOKEY_TARGET_PICO)
    set(PICO_STDIO_UART 1)
    set(PICO_STDIO_USB 0)

    if (NOT DEFINED PICO_SDK_PATH)
        set(PICO_SDK_PATH "${CMAKE_SOURCE_DIR}/pico-sdk")
    endif ()
    if (EXISTS "${PICO_SDK_PATH}/pico_sdk_init.cmake")
        include(${PICO_SDK_PATH}/pico_sdk_init.cmake)
        pico_sdk_init()
    else ()
        message(FATAL_ERROR "The pico-sdk was not found! Please set PICO_SDK_PATH or add pico-sdk as a submodule.")
    endif ()
endif ()

project(liblokey C CXX ASM)

include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/dependencies.cmake)
include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/source.cmake)

if (LOKEY_TARGET_PICO)
    message(STATUS "Building for Raspberry Pi Pico")
    include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/target_pico.cmake)
    add_subdirectory(test/pico)
else ()
    message(STATUS "Building for host target")
    include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/target_host.cmake)
    add_subdirectory(test/host)
endif ()
